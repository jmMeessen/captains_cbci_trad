---

#Jenkins_node_type is defined in the calling playbook
- name: "Include the 'Client Master #1' installation specific variables" 
  include_vars: "master.yml"

- name: Create some useful aliases on the default (ubuntu user)
  template: 
    src: "bash_aliases.j2"
    dest: "/home/ubuntu/.bash_aliases"
    force: yes
    mode: u=rw,g=r,o=r  

- name: Configure the limits for this system
  become: true
  ansible.builtin.copy:
    src: "limits.conf"
    dest: "/etc/security/limits.d/cloudbees.conf"
    force: yes
    backup: yes
    owner: "root"
    group: "root"
    mode: u=rw,g=r,o=r    

- name: Capture the CasC linkfile we prapared on the CJOC
  ansible.builtin.command: "cat /home/ubuntu/ConfigMgt/CM1_linkfile.yml"
  delegate_to: "cjoc"
  register: linkFile_text

- name: create file locally with what we captured
  shell: "echo '{{ linkFile_text.stdout }}' > /home/ubuntu/casc-bundle-link.yml"
  args: 
    creates: /home/ubuntu/casc-bundle-link.yml

- name: Copy and update the initial configuration before first startup (Master)
  #Proceeding this way is important so that the noWizard parameter works properly
  become: true
  ansible.builtin.copy:
    src: "{{ package_name }}"
    dest: "/etc/default/{{ package_name }}"
    force: no
    backup: yes
    owner: "root"
    group: "root"
    mode: u=rw,g=r,o=r

- name: Add the {{ option_friendly_name }} APT Key
  become: true
  apt_key:
    url: "{{ key_url }}"
    state: present

- name: Add the {{ option_friendly_name }} package repository
  become: true
  apt_repository:
    repo: "{{ repo_url }}"
    state: present

# To force a particular version:  "{{ package_name }}=2.138.3.1"
- name: Install {{ option_friendly_name }}
  become: true
  apt:
    update_cache: yes
    name: "{{ package_name }}"

- name: create the init.groovy.d directory (just in case)
  become: true
  file:
    path: "/var/lib/{{ jenkins_user }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    mode: "u=rwx,g=rx,o=rx"

#
# Setup everything required to use the CLI
#
- name: Call configCLI playbook
  include_tasks: 02_configCLI.yml

- name: wait for jenkins to be up
  uri: 
    url: "{{ cm_url }}/login" 
    status_code: "200" 
  register: result
  until: result.status == 200
  retries: 60
  delay: 1

#
# Prepare everything to connect the JNLP Agent
#
- name: Call JNLP startup playbook
  include_tasks: 03_jnlp_startup.yml